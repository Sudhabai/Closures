function createCounter() {
  let count = 0;  // `count` is a private variable, it cannot be accessed directly from outside

  return {
    increment: function() {
      count++;  // Increase the count
      console.log(`Current count: ${count}`);
    },
    decrement: function() {
      count--;  // Decrease the count
      console.log(`Current count: ${count}`);
    },
    getCount: function() {
      console.log(`Current count: ${count}`);
    }
  };
}

// Example Usage:
const counter = createCounter();
counter.increment(); // Output: Current count: 1
counter.increment(); // Output: Current count: 2
counter.decrement(); // Output: Current count: 1
counter.getCount();  // Output: Current count: 1
const counter1 = createCounter();
const counter2 = createCounter();

counter1.increment(); // Output: Current count: 1
counter2.increment(); // Output: Current count: 1
counter1.increment(); // Output: Current count: 2
counter2.decrement(); // Output: Current count: 0
function createBankAccount() {
  let balance = 0;  // `balance` is a private variable

  return {
    deposit: function(amount) {
      balance += amount;
      console.log(`Deposited: ${amount}`);
    },
    withdraw: function(amount) {
      if (balance >= amount) {
        balance -= amount;
        console.log(`Withdrawn: ${amount}`);
      } else {
        console.log("Insufficient balance");
      }
    },
    getBalance: function() {
      console.log(`Current balance: ${balance}`);
    }
  };
}

// Example Usage:
const account = createBankAccount();
account.deposit(500);  // Output: Deposited: 500
account.withdraw(200); // Output: Withdrawn: 200
account.withdraw(400); // Output: Insufficient balance
console.log(account.balance); // Output: undefined
function createBankAccount() {
  let balance = 0;  // `balance` is private
  let transactionHistory = [];  // Array to store transaction history

  return {
    deposit: function(amount) {
      balance += amount;
      transactionHistory.push(`Deposited: ${amount}`);
      console.log(`Deposited: ${amount}`);
    },
    withdraw: function(amount) {
      if (balance >= amount) {
        balance -= amount;
        transactionHistory.push(`Withdrawn: ${amount}`);
        console.log(`Withdrawn: ${amount}`);
      } else {
        console.log("Insufficient balance");
      }
    },
    getBalance: function() {
      console.log(`Current balance: ${balance}`);
    },
    getTransactionHistory: function() {
      console.log("Transaction History:");
      transactionHistory.forEach(transaction => console.log(transaction));
    }
  };
}

